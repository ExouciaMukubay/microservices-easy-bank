package com.easybank.cards.mapper;


import com.easybank.cards.dto.CardsDto;
import com.easybank.cards.entity.Cards;

public class CardsMapper {

    public static CardsDto mapToCardsDto(Cards cards) {
        return CardsDto.builder()
                .cardNumber(cards.getCardNumber())
                .accountNumber(cards.getAccountNumber())
                .customerAccountNumber(cards.getCustomerAccountNumber())
                .cardType(cards.getCardType())
                .totalLimit(cards.getTotalLimit())
                .availableAmount(cards.getAvailableAmount())
                .amountUsed(cards.getAmountUsed())
                .build();
    }

    public static Cards mapToCards(CardsDto cardsDto) {
        return Cards.builder()
                .accountNumber(cardsDto.getAccountNumber())
                .customerAccountNumber(cardsDto.getCustomerAccountNumber())
                .cardNumber(cardsDto.getCardNumber())
                .cardType(cardsDto.getCardType())
                .totalLimit(cardsDto.getTotalLimit())
                .availableAmount(cardsDto.getAvailableAmount())
                .amountUsed(cardsDto.getAmountUsed())
                .build();
    }

    public static void updateCardsAndMapTopCard(CardsDto cardsDto, Cards cards) {

        if (cards.getTotalLimit() != cardsDto.getTotalLimit()) {
            cards.setTotalLimit(cardsDto.getTotalLimit());
        }

        if(cards.getAvailableAmount() != cardsDto.getAvailableAmount()) {
            cards.setAvailableAmount(cardsDto.getAvailableAmount());
        }

        if(cards.getAmountUsed() != cardsDto.getAmountUsed()) {
            cards.setAmountUsed(cardsDto.getAmountUsed());
        }
    }
}
